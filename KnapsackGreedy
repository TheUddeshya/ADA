#include<stdio.h> 
void knapsack(int n, float wt[], float pft[], float capa) 
{	float x[20], tp = 0;
   	int i, j, u;
   	u = capa;
 	for (i = 0; i < n; i++)
		x[i]=0.0;
 
   	for (i = 0; i < n; i++) 
   	{	if (wt[i]>u)
        	break;
		else 
		{	x[i] = 1.0;
        	tp = tp + pft[i];
        	u = u - wt[i];
      	}
   	}
   	if (i < n)
    	x[i]=u/wt[i];
 	tp = tp + (x[i] * pft[i]);
	printf("\nThe result vector is: ");
   	for (i = 0; i < n; i++)
    	printf("%f\t", x[i]);
 	printf("\nMaximum profit is: %f", tp);
}
int main()
{	float wt[20], pft[20], capa;
	int num, i, j;
	float ratio[20], temp;
	printf("\nEnter the no. of objects: ");
	scanf("%d", &num);
	printf("\nEnter the wts and profits of each object: ");
	for (i = 0; i < num; i++)
    	scanf("%f %f", &wt[i], &pft[i]);
	printf("\nEnter the capacity of knapsack: ");
	scanf("%f", &capa);
	for (i = 0; i < num; i++)
		ratio[i] = pft[i] / wt[i];
	for (i = 0; i < num; i++) 
	{
		for (j=i+1;j<num;j++) 
		{	if (ratio[i] < ratio[j]) 
			{	temp = ratio[j];
            	ratio[j] = ratio[i];
            	ratio[i] = temp;
            	temp = wt[j];
            	wt[j]=wt[i];
            	wt[i]=temp;
				temp = pft[j];
            	pft[j] = pft[i];
            	pft[i] = temp;
         	}
      	}
   	}
	knapsack(num, wt, pft, capa);
	return(0);
}
